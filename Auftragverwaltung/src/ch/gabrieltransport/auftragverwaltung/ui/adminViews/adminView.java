package ch.gabrieltransport.auftragverwaltung.ui.adminViews;

import ch.gabrieltransport.auftragverwaltung.dal.AnhaengerDAO;
import ch.gabrieltransport.auftragverwaltung.dal.FahrerDAO;
import ch.gabrieltransport.auftragverwaltung.dal.FahrzeugDAO;
import ch.gabrieltransport.auftragverwaltung.entities.Anhaenger;
import ch.gabrieltransport.auftragverwaltung.entities.Anhaenger_;
import ch.gabrieltransport.auftragverwaltung.entities.Fahrer;
import ch.gabrieltransport.auftragverwaltung.entities.Fahrer_;
import ch.gabrieltransport.auftragverwaltung.entities.Fahrzeug;
import ch.gabrieltransport.auftragverwaltung.entities.Fahrzeug_;
import ch.gabrieltransport.auftragverwaltung.ui.fahrerViews.DeleteEmployeeColumn;
import ch.gabrieltransport.auftragverwaltung.ui.fahrerViews.DriverDetail;
import ch.gabrieltransport.auftragverwaltung.ui.fahrerViews.EditEmployeeColumn;
import ch.gabrieltransport.auftragverwaltung.ui.fahrzeugViews.DeleteFahrzeugColumn;
import ch.gabrieltransport.auftragverwaltung.ui.fahrzeugViews.EditFahrzeugColumn;
import ch.gabrieltransport.auftragverwaltung.ui.fahrzeugViews.FahrzeugDetail;
import ch.gabrieltransport.auftragverwaltung.ui.trailerViews.DeleteTrailerColumn;
import ch.gabrieltransport.auftragverwaltung.ui.trailerViews.EditTrailerColumn;
import ch.gabrieltransport.auftragverwaltung.ui.trailerViews.TrailerDetail;

import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Window;
import com.xdev.dal.DAOs;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevTabSheet;
import com.xdev.ui.XdevVerticalLayout;
import com.xdev.ui.XdevView;
import com.xdev.ui.entitycomponent.table.XdevTable;
import com.xdev.ui.navigation.Navigation;

public class adminView extends XdevView {

	/**
	 * 
	 */
	public adminView() {
		super();
		this.initUI();
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #btnNewVehicle}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnNewVehicle_buttonClick(Button.ClickEvent event) {
		Window win = new Window();
		win.setWidth("600");
		win.setHeight("600");
		win.center();
		win.setModal(true);
		FahrzeugDetail vehicleView = new FahrzeugDetail(new FahrzeugDetail.Callback() {
		      public void onDialogResult(Fahrzeug result) {
		    	  tblVehicle.getBeanContainerDataSource().addBean(result);
		      }
		});
		win.setContent(vehicleView);
		getUI().addWindow(win);
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #btnBack}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnBack_buttonClick(Button.ClickEvent event) {
		Navigation.to("home").navigate();
	}

	/**
	 * Event handler delegate method for the {@link XdevButton}
	 * {@link #btnNewEmployee}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnNewEmployee_buttonClick(Button.ClickEvent event) {
		Window win = new Window();
		win.setWidth("600");
		win.setHeight("600");
		win.center();
		win.setModal(true);
		DriverDetail employeeView = new DriverDetail(new DriverDetail.Callback() {
		      public void onDialogResult(Fahrer result) {
		    	  tblDriver.getBeanContainerDataSource().addBean(result);
		      }
		});
		win.setContent(employeeView);
		getUI().addWindow(win);
	}

	/**
	 * Event handler delegate method for the {@link XdevButton}
	 * {@link #btnNewTrailer}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void btnNewTrailer_buttonClick(Button.ClickEvent event) {
		Window win = new Window();
		win.setWidth("600");
		win.setHeight("600");
		win.center();
		win.setModal(true);
		TrailerDetail trailerView = new TrailerDetail(new TrailerDetail.Callback() {
		      public void onDialogResult(Anhaenger result) {
		    	  tblTrailer.getBeanContainerDataSource().addBean(result);
		      }
		});
		win.setContent(trailerView);
		getUI().addWindow(win);
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.gridLayout = new XdevGridLayout();
		this.btnBack = new XdevButton();
		this.tabSheet = new XdevTabSheet();
		this.verticalLayout3 = new XdevVerticalLayout();
		this.tblDriver = new XdevTable<>();
		this.btnNewEmployee = new XdevButton();
		this.verticalLayout = new XdevVerticalLayout();
		this.tblVehicle = new XdevTable<>();
		this.btnNewVehicle = new XdevButton();
		this.verticalLayout2 = new XdevVerticalLayout();
		this.tblTrailer = new XdevTable<>();
		this.btnNewTrailer = new XdevButton();
	
		this.btnBack.setCaption("Auftragsverwaltung");
		this.tabSheet.setStyleName("framed");
		this.tblDriver.setCaption("Tab");
		this.tblDriver.setContainerDataSource(Fahrer.class, DAOs.get(FahrerDAO.class).findAll());
		this.tblDriver.addGeneratedColumn("generated", new EditEmployeeColumn.Generator());
		this.tblDriver.addGeneratedColumn("generated2", new DeleteEmployeeColumn.Generator());
		this.tblDriver.setVisibleColumns(Fahrer_.nachname.getName(), Fahrer_.vorname.getName(), Fahrer_.telefon.getName(),
				"generated", "generated2");
		this.tblDriver.setColumnHeader("generated", " ");
		this.tblDriver.setColumnHeader("generated2", " ");
		this.btnNewEmployee.setCaption("Personal erfassen");
		this.tblVehicle.setCaption("Tab");
		this.tblVehicle.setContainerDataSource(Fahrzeug.class, DAOs.get(FahrzeugDAO.class).findAllOrderNumber());
		this.tblVehicle.addGeneratedColumn("generated2", new EditFahrzeugColumn.Generator());
		this.tblVehicle.addGeneratedColumn("generated", new DeleteFahrzeugColumn.Generator());
		this.tblVehicle.setVisibleColumns(Fahrzeug_.nummer.getName(), Fahrzeug_.kennzeichen.getName(),
				Fahrzeug_.nutzlast.getName(), Fahrzeug_.anhaenger.getName(), "generated2", "generated");
		this.tblVehicle.setColumnHeader("generated2", " ");
		this.tblVehicle.setColumnHeader("generated", " ");
		this.btnNewVehicle.setCaption("Fahrzeug erfassen");
		this.tblTrailer.setCaption("Tab");
		this.tblTrailer.setContainerDataSource(Anhaenger.class, DAOs.get(AnhaengerDAO.class).findAll());
		this.tblTrailer.addGeneratedColumn("generated", new EditTrailerColumn.Generator());
		this.tblTrailer.addGeneratedColumn("generated2", new DeleteTrailerColumn.Generator());
		this.tblTrailer.setVisibleColumns(Anhaenger_.kennzeichen.getName(), Anhaenger_.nummer.getName(),
				Anhaenger_.nutzlast.getName(), "generated", "generated2");
		this.tblTrailer.setColumnHeader("generated", " ");
		this.tblTrailer.setColumnHeader("generated2", " ");
		this.btnNewTrailer.setCaption("Anhänger erfassen");
	
		this.tblDriver.setSizeFull();
		this.verticalLayout3.addComponent(this.tblDriver);
		this.verticalLayout3.setExpandRatio(this.tblDriver, 100.0F);
		this.btnNewEmployee.setSizeUndefined();
		this.verticalLayout3.addComponent(this.btnNewEmployee);
		this.verticalLayout3.setComponentAlignment(this.btnNewEmployee, Alignment.MIDDLE_LEFT);
		this.tblVehicle.setSizeFull();
		this.verticalLayout.addComponent(this.tblVehicle);
		this.verticalLayout.setExpandRatio(this.tblVehicle, 100.0F);
		this.btnNewVehicle.setSizeUndefined();
		this.verticalLayout.addComponent(this.btnNewVehicle);
		this.tblTrailer.setSizeFull();
		this.verticalLayout2.addComponent(this.tblTrailer);
		this.verticalLayout2.setExpandRatio(this.tblTrailer, 100.0F);
		this.btnNewTrailer.setSizeUndefined();
		this.verticalLayout2.addComponent(this.btnNewTrailer);
		this.verticalLayout3.setSizeFull();
		this.tabSheet.addTab(this.verticalLayout3, "Personal", null);
		this.verticalLayout.setSizeFull();
		this.tabSheet.addTab(this.verticalLayout, "Fahrzeuge", null);
		this.verticalLayout2.setSizeFull();
		this.tabSheet.addTab(this.verticalLayout2, "Anhänger", null);
		this.tabSheet.setSelectedTab(this.verticalLayout3);
		this.gridLayout.setColumns(1);
		this.gridLayout.setRows(2);
		this.btnBack.setSizeUndefined();
		this.gridLayout.addComponent(this.btnBack, 0, 0);
		this.tabSheet.setSizeFull();
		this.gridLayout.addComponent(this.tabSheet, 0, 1);
		this.gridLayout.setColumnExpandRatio(0, 100.0F);
		this.gridLayout.setRowExpandRatio(1, 100.0F);
		this.gridLayout.setSizeFull();
		this.setContent(this.gridLayout);
		this.setSizeFull();
	
		this.btnBack.addClickListener(event -> this.btnBack_buttonClick(event));
		this.btnNewEmployee.addClickListener(event -> this.btnNewEmployee_buttonClick(event));
		this.btnNewVehicle.addClickListener(event -> this.btnNewVehicle_buttonClick(event));
		this.btnNewTrailer.addClickListener(event -> this.btnNewTrailer_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevButton btnBack, btnNewEmployee, btnNewVehicle, btnNewTrailer;
	private XdevTable<Anhaenger> tblTrailer;
	private XdevTable<Fahrzeug> tblVehicle;
	private XdevTabSheet tabSheet;
	private XdevGridLayout gridLayout;
	private XdevVerticalLayout verticalLayout3, verticalLayout, verticalLayout2;
	private XdevTable<Fahrer> tblDriver;
	// </generated-code>

}
